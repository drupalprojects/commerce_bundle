<?php
/**
 * @file
 * Install, update and uninstall functions for the Commerce Bundle module.
 */

/**
 * Field config and instance definitions.
 *
 * @return array
 *   The fields and their instances, keyed by field name, this module creates.
 */
function commerce_bundle_installed_fields() {
  $fields = array();

  // Field commerce_bundle_id configuration.
  $fields['field_config']['commerce_bundle_id'] = array(
    'active' => 1,
    'cardinality' => 1,
    'deleted' => 0,
    'entity_types' => array(),
    'field_name' => 'commerce_bundle_id',
    'foreign keys' => array(
      'node' => array(
        'columns' => array(
          'target_id' => 'nid',
        ),
        'table' => 'node',
      ),
    ),
    'indexes' => array(
      'target_id' => array(
        0 => 'target_id',
      ),
    ),
    'locked' => 0,
    'module' => 'entityreference',
    'settings' => array(
      'handler' => 'base',
      'handler_settings' => array(
        'behaviors' => array(
          'views-select-list' => array(
            'status' => 0,
          ),
        ),
        'sort' => array(
          'type' => 'none',
        ),
        'target_bundles' => array(),
      ),
      'target_type' => 'node',
    ),
    'translatable' => 0,
    'type' => 'entityreference',
  );

  // Field commerce_bundle_id instance on Product Bundle Line Item.
  $fields['field_instance']['commerce_bundle_id'] = array(
    'bundle' => 'bundle_product',
    'commerce_cart_settings' => array(
      'field_access' => 0,
    ),
    'default_value' => NULL,
    'deleted' => 0,
    'description' => 'The bundle display node ID.',
    'display' => array(
      'default' => array(
        'label' => 'above',
        'module' => 'entityreference',
        'settings' => array(
          'link' => FALSE,
        ),
        'type' => 'entityreference_label',
        'weight' => 5,
      ),
    ),
    'entity_type' => 'commerce_line_item',
    'field_name' => 'commerce_bundle_id',
    'label' => 'Bundle ID',
    'required' => 1,
    'settings' => array(
      'user_register_form' => FALSE,
    ),
    'widget' => array(
      'active' => 1,
      'module' => 'entityreference',
      'settings' => array(
        'match_operator' => 'CONTAINS',
        'path' => '',
        'size' => 60,
      ),
      'type' => 'entityreference_autocomplete',
      'weight' => 3,
    ),
  );

  // Field commerce_bundle_item_id configuration.
  $fields['field_config']['commerce_bundle_item_id'] = array(
    'active' => 1,
    'cardinality' => 1,
    'deleted' => 0,
    'entity_types' => array(),
    'field_name' => 'commerce_bundle_item_id',
    'foreign keys' => array(
      'node' => array(
        'columns' => array(
          'target_id' => 'nid',
        ),
        'table' => 'node',
      ),
    ),
    'indexes' => array(
      'target_id' => array(
        0 => 'target_id',
      ),
    ),
    'locked' => 0,
    'module' => 'entityreference',
    'settings' => array(
      'handler' => 'base',
      'handler_settings' => array(
        'behaviors' => array(
          'views-select-list' => array(
            'status' => 0,
          ),
        ),
        'sort' => array(
          'type' => 'none',
        ),
        'target_bundles' => array(),
      ),
      'target_type' => 'commerce_bundle_item',
    ),
    'translatable' => 0,
    'type' => 'entityreference',
  );

  // Field commerce_bundle_item_id instance on Product Bundle Line Item.
  $fields['field_instance']['commerce_bundle_item_id'] = array(
    'bundle' => 'bundle_product',
    'commerce_cart_settings' => array(
      'field_access' => 0,
    ),
    'default_value' => NULL,
    'deleted' => 0,
    'description' => 'The bundle item entity ID.',
    'display' => array(
      'default' => array(
        'label' => 'above',
        'module' => 'entityreference',
        'settings' => array(
          'link' => FALSE,
        ),
        'type' => 'entityreference_label',
        'weight' => 6,
      ),
    ),
    'entity_type' => 'commerce_line_item',
    'field_name' => 'commerce_bundle_item_id',
    'label' => 'Bundle Item ID',
    'required' => 1,
    'settings' => array(
      'user_register_form' => FALSE,
    ),
    'widget' => array(
      'active' => 1,
      'module' => 'entityreference',
      'settings' => array(
        'match_operator' => 'CONTAINS',
        'path' => '',
        'size' => 60,
      ),
      'type' => 'entityreference_autocomplete',
      'weight' => 4,
    ),
  );

  // Field commerce_bundle_unit_quantity configuration.
  $fields['field_config']['commerce_bundle_unit_quantity'] = array(
    'active' => 1,
    'cardinality' => 1,
    'deleted' => 0,
    'entity_types' => array(),
    'field_name' => 'commerce_bundle_unit_quantity',
    'foreign keys' => array(),
    'indexes' => array(),
    'locked' => 0,
    'module' => 'number',
    'settings' => array(),
    'translatable' => 0,
    'type' => 'number_integer',
  );

  // Field commerce_bundle_unit_quantity instance on Bundle Group Product Type.
  $fields['field_instance']['commerce_bundle_unit_quantity_product_type'] = array(
    'bundle' => 'bundle_group',
    'commerce_cart_settings' => array(
      'field_access' => 0,
    ),
    'default_value' => NULL,
    'deleted' => 0,
    'description' => '',
    'display' => array(
      'default' => array(
        'label' => 'above',
        'module' => 'number',
        'settings' => array(
          'decimal_separator' => '.',
          'prefix_suffix' => TRUE,
          'scale' => 0,
          'thousand_separator' => ' ',
        ),
        'type' => 'number_integer',
        'weight' => 4,
      ),
    ),
    'entity_type' => 'commerce_product',
    'field_name' => 'commerce_bundle_unit_quantity',
    'label' => 'Unit Quantity',
    'required' => 1,
    'settings' => array(
      'max' => '',
      'min' => '',
      'prefix' => '',
      'suffix' => '',
      'user_register_form' => FALSE,
    ),
    'widget' => array(
      'active' => 0,
      'module' => 'number',
      'settings' => array(),
      'type' => 'number',
      'weight' => 2,
    ),
  );

  // Field commerce_bundle_unit_quantity instance on Bundle Product Line Item
  // Type.
  $fields['field_instance']['commerce_bundle_unit_quantity_line_item'] = array(
    'bundle' => 'bundle_product',
    'commerce_cart_settings' => array(
      'field_access' => 0,
    ),
    'default_value' => NULL,
    'deleted' => 0,
    'description' => '',
    'display' => array(
      'default' => array(
        'label' => 'above',
        'module' => 'number',
        'settings' => array(
          'decimal_separator' => '.',
          'prefix_suffix' => TRUE,
          'scale' => 0,
          'thousand_separator' => ' ',
        ),
        'type' => 'number_integer',
        'weight' => 4,
      ),
    ),
    'entity_type' => 'commerce_line_item',
    'field_name' => 'commerce_bundle_unit_quantity',
    'label' => 'Unit Quantity',
    'required' => 1,
    'settings' => array(
      'max' => '',
      'min' => '',
      'prefix' => '',
      'suffix' => '',
      'user_register_form' => FALSE,
    ),
    'widget' => array(
      'active' => 0,
      'module' => 'number',
      'settings' => array(),
      'type' => 'number',
      'weight' => 2,
    ),
  );

  // Field commerce_bundle_group_id configuration.
  $fields['field_config']['commerce_bundle_group_id'] = array(
    'active' => 1,
    'cardinality' => 1,
    'deleted' => 0,
    'entity_types' => array(),
    'field_name' => 'commerce_bundle_group_id',
    'foreign keys' => array(
      'node' => array(
        'columns' => array(
          'target_id' => 'nid',
        ),
        'table' => 'node',
      ),
    ),
    'indexes' => array(
      'target_id' => array(
        0 => 'target_id',
      ),
    ),
    'locked' => 0,
    'module' => 'entityreference',
    'settings' => array(
      'handler' => 'base',
      'handler_settings' => array(
        'behaviors' => array(
          'views-select-list' => array(
            'status' => 0,
          ),
        ),
        'sort' => array(
          'type' => 'none',
        ),
        'target_bundles' => array(),
      ),
      'target_type' => 'commerce_product',
    ),
    'translatable' => 0,
    'type' => 'entityreference',
  );

  // Field commerce_bundle_group_id instance on Product Bundle Line Item.
  $fields['field_instance']['commerce_bundle_group_id'] = array(
    'bundle' => 'bundle_product',
    'commerce_cart_settings' => array(
      'field_access' => 0,
    ),
    'default_value' => NULL,
    'deleted' => 0,
    'description' => 'The bundle group product ID.',
    'display' => array(
      'default' => array(
        'label' => 'above',
        'module' => 'entityreference',
        'settings' => array(
          'link' => FALSE,
        ),
        'type' => 'entityreference_label',
        'weight' => 6,
      ),
    ),
    'entity_type' => 'commerce_line_item',
    'field_name' => 'commerce_bundle_group_id',
    'label' => 'Bundle Group ID',
    'required' => 1,
    'settings' => array(
      'user_register_form' => FALSE,
    ),
    'widget' => array(
      'active' => 1,
      'module' => 'entityreference',
      'settings' => array(
        'match_operator' => 'CONTAINS',
        'path' => '',
        'size' => 60,
      ),
      'type' => 'entityreference_autocomplete',
      'weight' => 4,
    ),
  );

  // Field 'commerce_bundle_config_id' configuration.
  $fields['field_config']['commerce_bundle_config_id'] = array(
    'active' => 1,
    'cardinality' => 1,
    'deleted' => 0,
    'entity_types' => array(),
    'field_name' => 'commerce_bundle_config_id',
    'foreign keys' => array(
      'format' => array(
        'columns' => array(
          'format' => 'format',
        ),
        'table' => 'filter_format',
      ),
    ),
    'indexes' => array(
      'format' => array(
        0 => 'format',
      ),
    ),
    'locked' => 1,
    'module' => 'text',
    'settings' => array(
      'max_length' => 255,
    ),
    'translatable' => 0,
    'type' => 'text',
  );

  // Field 'commerce_bundle_config_id' instance on Bundle Product LI type.
  $fields['field_instance']['commerce_bundle_config_id'] = array(
    'bundle' => 'bundle_product',
    'commerce_cart_settings' => array(
      'field_access' => 0,
    ),
    'default_value' => NULL,
    'deleted' => 0,
    'description' => '',
    'display' => array(
      'default' => array(
        'label' => 'above',
        'module' => 'text',
        'settings' => array(),
        'type' => 'text_default',
        'weight' => 9,
      ),
    ),
    'entity_type' => 'commerce_line_item',
    'field_name' => 'commerce_bundle_config_id',
    'label' => 'bundle permutation',
    'required' => 0,
    'settings' => array(
      'text_processing' => 0,
      'user_register_form' => FALSE,
    ),
    'widget' => array(
      'active' => 1,
      'module' => 'text',
      'settings' => array(
        'size' => 60,
      ),
      'type' => 'text_textfield',
      'weight' => 5,
    ),
  );

  return $fields;
}

/**
 * Implements hook_install().
 */
function commerce_bundle_install() {

  // Create the bundle group product type.
  $product_type = commerce_product_ui_product_type_new();

  $product_type['type'] = 'bundle_group';
  $product_type['name'] = t('Bundle Group');
  $product_type['description'] = t('A group of related products e.g. t-shirt with attributes of color, and size.');
  $product_type['is_new'] = TRUE;

  commerce_product_ui_product_type_save($product_type, TRUE);

  $fields = commerce_bundle_installed_fields();
  // Add all fields.
  foreach ($fields['field_config'] as $field) {
    // Look for existing field.
    $field_config = field_info_field($field['field_name']);
    if (empty($field_config)) {
      field_create_field($field);
    }
  }
  // Add all field instances.
  foreach ($fields['field_instance'] as $field_instance) {
    // Look for existing instance.
    $instance = field_info_instance($field_instance['entity_type'], $field_instance['field_name'], $field_instance['bundle']);
    if (empty($instance)) {
      field_create_instance($field_instance);
    }
  }
}

/**
 * Implements hook_uninstall().
 */
function commerce_bundle_uninstall() {
  // Delete field instances attached to commerce entity types this module
  // creates.
  module_load_include('module', 'commerce');
  commerce_delete_instances('commerce_line_item', 'bundle_product');
  commerce_delete_instances('commerce_product', 'bundle_group');
}
